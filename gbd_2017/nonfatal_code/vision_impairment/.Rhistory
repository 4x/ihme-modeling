## load required packages
require(ggplot2)
#install.packages("ggrepel")
require(ggrepel)
require(grid)
require(dplyr)
# install.packages("maps")
require(maps)
# install.packages("mapproj")
require(mapproj)
## load data
scatter_data <- read.csv("C:/Users/emumford/Desktop/Thesis/Tables/avli_sdi_scatter_data.csv")
scatter_data <- subset(scatter_data, super_region_name != "")
scatter2016 <- subset(scatter_data, year_id==2016)
country_only <- subset(scatter2016, location_type %in% c("admin0", "nonsovereign"))
## Scatter AVLI and SDI
# first country only
cplot <- ggplot(country_only, aes(x=mean_value, y=mean))
interesting_points <- c("Burundi", "South Sudan", "Niger", "Haiti", "Zambia", "North Korea", "Myanmar", "Egypt",
"Barbados", "Sweden", "Timor-Leste", "Cambodia", "Somalia", "Greenland", "Bangladesh", "Kuwait",
"Somalia", "Taiwan", "Denmark", "Lithuania", "United States", "Uganda", "Central African Republiic",
"Mali", "Afghanistan", "Benin", "Burkina Faso", "Greater London", "Luxembourg", "Barbados", "Thailand",
"Belize", "South Korea", "India")
# get the r-squared
country_only$sdi100 <- country_only$mean_value * 100
summary(lm(mean~sdi100, data=country_only))$r.squared
cplot + geom_point(aes(color=super_region_name)) + geom_smooth(mapping = aes(linetype="r-squared = .35"), method="lm", formula = y~x, se=FALSE) +
geom_text_repel(aes(label=location_name), data=(subset(country_only, location_name %in% interesting_points)),force=3) +
scale_linetype(name="") + ggtitle("Amenable Vision Loss Index versus Socio-demographic Index, 2016") +
scale_x_continuous(name="Socio-demographic Index") + scale_y_continuous(name="Amenable Vision Loss Index")
catplot <- ggplot(country_only, aes(x=mean_value, y=cfi_mean))
catplot + geom_point(aes(color=super_region_name)) + geom_smooth(mapping = aes(linetype="r-squared = .61"), method="lm", formula = y~x, se=FALSE) +
geom_text_repel(aes(label=location_name), data=(subset(country_only, location_name %in% interesting_points)),force=3) +
scale_linetype(name="") + ggtitle("Cataract Index versus Socio-demographic Index, 2016") +
scale_x_continuous(name="Socio-demographic Index") + scale_y_continuous(name="Cataract Index")
summary(lm(cfi_mean~sdi, data=country_only))$r.squared # Referenced https://tutorials.iq.harvard.edu/R/Rgraphics/Rgraphics.html#aesthetic_mapping_vs_assignment for help making this plot
summary(lm(cfi_mean~mean_value, data=country_only))$r.squared # Referenced https://tutorials.iq.harvard.edu/R/Rgraphics/Rgraphics.html#aesthetic_mapping_vs_assignment for help making this plot
# get the r-squared
summary(lm(rfi_mean~mean_value, data=country_only))$r.squared # Referenced https://tutorials.iq.harvard.edu/R/Rgraphics/Rgraphics.html#aesthetic_mapping_vs_assignment for help making this plot
# get the r-squared
summary(lm(rfi_mean~mean_value, data=country_only))$r.squared # Referenced https://tutorials.iq.harvard.edu/R/Rgraphics/Rgraphics.html#aesthetic_mapping_vs_assignment for help making this plot
re_interesting_points <- c("Burundi", "South Sudan", "Niger", "Haiti", "Zambia", "North Korea", "Myanmar", "Egypt",
"Barbados", "Sweden", "Timor-Leste", "Cambodia", "Somalia", "Greenland", "Bangladesh", "Kuwait",
"Somalia", "Taiwan", "Denmark", "Lithuania", "United States", "Uganda", "Central African Republiic",
"Mali", "Afghanistan", "Benin", "Burkina Faso", "Greater London", "Luxembourg", "Barbados", "Thailand",
"Belize", "India")
rplot <- ggplot(country_only, aes(x=mean_value, y=rfi_mean))
rplot + geom_point(aes(color=super_region_name)) + geom_smooth(mapping = aes(linetype="r-squared = .11"), method="lm", formula = y~x, se=FALSE) +
geom_text_repel(aes(label=location_name), data=(subset(country_only, location_name %in% interesting_points)),force=3) +
scale_linetype(name="") + ggtitle("Uncorrected Refractive Error Index versus Socio-demographic Index, 2016") +
scale_x_continuous(name="Socio-demographic Index") + scale_y_continuous(name="Uncorrected Refractive Error Index") # Referenced https://tutorials.iq.harvard.edu/R/Rgraphics/Rgraphics.html#aesthetic_mapping_vs_assignment for help making this plot
require(ggplot2)
#install.packages("ggrepel")
require(ggrepel)
require(grid)
require(dplyr)
# install.packages("maps")
require(maps)
# install.packages("mapproj")
require(mapproj)
## load data
scatter_data <- read.csv("C:/Users/emumford/Desktop/Thesis/Tables/avli_sdi_scatter_data.csv")
scatter_data <- subset(scatter_data, super_region_name != "")
scatter2016 <- subset(scatter_data, year_id==2016)
country_only <- subset(scatter2016, location_type %in% c("admin0", "nonsovereign"))
## Scatter AVLI and SDI
# first country only
cplot <- ggplot(country_only, aes(x=mean_value, y=mean))
interesting_points <- c("Burundi", "South Sudan", "Niger", "Haiti", "Zambia", "North Korea", "Myanmar", "Egypt",
"Barbados", "Sweden", "Timor-Leste", "Cambodia", "Somalia", "Greenland", "Bangladesh", "Kuwait",
"Somalia", "Taiwan", "Denmark", "Lithuania", "United States", "Uganda", "Central African Republiic",
"Mali", "Afghanistan", "Benin", "Burkina Faso", "Greater London", "Luxembourg", "Barbados", "Thailand",
"Belize", "South Korea", "India")
# get the r-squared
country_only$sdi100 <- country_only$mean_value * 100
summary(lm(mean~sdi100, data=country_only))$r.squared
cplot + geom_point(aes(color=super_region_name)) + geom_smooth(mapping = aes(linetype="r-squared = .35"), method="lm", formula = y~x, se=FALSE) +
geom_text_repel(aes(label=location_name), data=(subset(country_only, location_name %in% interesting_points)),force=3) +
scale_linetype(name="") + ggtitle("Amenable Vision Loss Index versus Socio-demographic Index, 2016") +
scale_x_continuous(name="Socio-demographic Index") + scale_y_continuous(name="Amenable Vision Loss Index")
world_map <- map_data('world')
world_map <- subset(world_map, region != "Antarctica")
world_map <- fortify(world_map) # Referenced StackOverflow answer by hrbmster (located here: https://stackoverflow.com/questions/30706124/ploting-the-world-map-in-r) to make map plots
# only take a look at US Virgin Islands
world_map[world_map$region == "Virgin Islands" & world_map$subregion == 'US', "region"] = "Virgin Islands, U.S." # Referenced StackOverflow answer by Zelazny7 for help with variable reassignment (located here: https://stackoverflow.com/questions/28650957/update-a-value-in-one-column-based-on-criteria-in-other-columns)
# not_joined <- anti_join(country_only, world_map, by="region") # Referenced join documentation -- located here: https://www.rdocumentation.org/packages/dplyr/versions/0.7.6/topics/join
# not_joined2 <- anti_join(world_map, country_only, by="region") # Referenced join documentation -- located here: https://www.rdocumentation.org/packages/dplyr/versions/0.7.6/topics/join
# sort(unique(not_joined2$region))
# sort(not_joined$location_name)
# used R to find where differences exist, but python to change values
ggplot() + geom_map(data=world_map, map=world_map, aes(x=long, y=lat, group=group, map_id=region), fill="white") +
geom_map(data=country_only, map=world_map, aes(fill=mean, map_id=region)) +
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60,90)) +
labs(fill="Mean AVLI Score", title="Amenable Vision Loss Index, 2016", x="", y="") +
scale_x_continuous(breaks=c()) + scale_y_continuous(breaks=c())
## Map of REI
ggplot() + geom_map(data=world_map, map=world_map, aes(x=long, y=lat, group=group, map_id=region), fill="white") +
geom_map(data=country_only, map=world_map, aes(fill=rfi_mean, map_id=region)) +
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60,90)) +
labs(fill="Mean REI Score", title="Refractive Error Index, 2016", x="", y="") +
scale_x_continuous(breaks=c()) + scale_y_continuous(breaks=c())
ggplot() + geom_map(data=world_map, map=world_map, aes(x=long, y=lat, group=group, map_id=region), fill="white") +
geom_map(data=country_only, map=world_map, aes(fill=cfi_mean, map_id=region)) +
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60,90)) +
labs(fill="Mean CI Score", title="Cataract Index, 2016", x="", y="") +
scale_x_continuous(breaks=c()) + scale_y_continuous(breaks=c())
# Make 1990 maps (for the appendix)
scatter1990 <- subset(scatter_data, year_id==1990)
country_only1990 <- subset(scatter1990, location_type %in% c("admin0", "nonsovereign"))
ggplot() + geom_map(data=world_map, map=world_map, aes(x=long, y=lat, group=group, map_id=region), fill="white") +
geom_map(data=country_only, map=world_map, aes(fill=rfi_mean, map_id=region)) +
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60,90)) +
labs(fill="Mean UREI Score", title="Refractive Error Index, 2016", x="", y="") +
scale_x_continuous(breaks=c()) + scale_y_continuous(breaks=c())
# Make 1990 maps (for the appendix)
scatter1990 <- subset(scatter_data, year_id==1990)
country_only1990 <- subset(scatter1990, location_type %in% c("admin0", "nonsovereign"))
ggplot() + geom_map(data=world_map, map=world_map, aes(x=long, y=lat, group=group, map_id=region), fill="white") +
geom_map(data=country_only1990, map=world_map, aes(fill=mean, map_id=region)) +
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60,90)) +
labs(fill="Mean AVLI Score", title="Amenable Vision Loss Index, 1990", x="", y="") +
scale_x_continuous(breaks=c()) + scale_y_continuous(breaks=c()) # Referenced StackOverflow answer by hrbmster (located here: https://stackoverflow.com/questions/30706124/ploting-the-world-map-in-r) to make map plots
## Map of REI
ggplot() + geom_map(data=world_map, map=world_map, aes(x=long, y=lat, group=group, map_id=region), fill="white") +
geom_map(data=country_only, map=world_map, aes(fill=rfi_mean, map_id=region)) +
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60,90)) +
labs(fill="Mean UREI Score", title="Uncorrected Refractive Error Index, 2016", x="", y="") +
scale_x_continuous(breaks=c()) + scale_y_continuous(breaks=c())
ggplot() + geom_map(data=world_map, map=world_map, aes(x=long, y=lat, group=group, map_id=region), fill="white") +
geom_map(data=country_only1990, map=world_map, aes(fill=rfi_mean, map_id=region)) +
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60,90)) +
labs(fill="Mean UREI Score", title="Uncorrected Refractive Error Index, 1990", x="", y="") +
scale_x_continuous(breaks=c()) + scale_y_continuous(breaks=c()) # Referenced StackOverflow answer by hrbmster (located here: https://stackoverflow.com/questions/30706124/ploting-the-world-map-in-r) to make map plots
## Map of CI
ggplot() + geom_map(data=world_map, map=world_map, aes(x=long, y=lat, group=group, map_id=region), fill="white") +
geom_map(data=country_only1990, map=world_map, aes(fill=cfi_mean, map_id=region)) +
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60,90)) +
labs(fill="Mean CI Score", title="Cataract Index, 1990", x="", y="") +
scale_x_continuous(breaks=c()) + scale_y_continuous(breaks=c()) # Referenced StackOverflow answer by hrbmster (located here: https://stackoverflow.com/questions/30706124/ploting-the-world-map-in-r) to make map plots
ggplot() + geom_map(data=world_map, map=world_map, aes(x=long, y=lat, group=group, map_id=region), fill="white") +
geom_map(data=country_only1990, map=world_map, aes(fill=cfi_mean, map_id=region)) +
coord_map("rectangular", lat0=0, xlim=c(-180,180), ylim=c(-60,90)) +
labs(fill="Mean CI Score", title="Cataract Index, 1990", x="", y="") +
scale_x_continuous(breaks=c()) + scale_y_continuous(breaks=c())
